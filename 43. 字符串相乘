# LeetCode
力扣
class Solution {
    // 以其中一个数字进行每一位数字遍历，乘以另一个数字
    // 例如：123 乘以 78932，当 3 乘 78932 结果为 x
    // 20 乘 78932 结果为 y，100 乘 78932 结果为 c
    // 则最终结果为：x + y + c
    public String multiply(String num1, String num2) {
        if (num1.equals("0") || num2.equals("0")) {
            return "0";
        }
        int len1 = num1.length();
        int len2 = num2.length();
        String res = "";
        for (int i = len1 - 1; i >= 0; i--) {
            StringBuilder sb = new StringBuilder();
            for (int j = i; j < len1 - 1; j++) {
                sb.append("0");
            }
            int carry = 0;
            int tmp = num1.charAt(i) - '0';
            for (int j = len2 - 1; j >= 0; j--) {
                int sum = (num2.charAt(j) - '0') * tmp + carry;
                sb.insert(0, sum % 10);
                carry = sum / 10;
            }
            if (carry > 0) {
                sb.insert(0, carry);
            }
            res = helper(res, sb.toString());
        }
        return res;
    }
    // 按照之前的结果加上现在的结果
    public String helper(String s1, String s2) {
        int len1 = s1.length() - 1;
        int len2 = s2.length() - 1;
        int carry = 0;
        StringBuilder sb = new StringBuilder();
        while (len1 >= 0 || len2 >= 0 || carry > 0) {
            int sum = carry;
            if (len1 >= 0) {
                sum += (s1.charAt(len1) - '0');
                len1--;
            }
            if (len2 >= 0) {
                sum += (s2.charAt(len2) - '0');
                len2--;
            }
            sb.insert(0, sum % 10);
            carry = sum / 10;
        }
        return sb.toString();
    }
}
