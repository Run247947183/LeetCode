# LeetCode
力扣
暴力解法
class Solution {
    public int findMagicIndex(int[] nums) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == i) {
                return i;
            }
        }
        return -1;
    }
}

跳跃法
class Solution {
    public int findMagicIndex(int[] nums) {
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == i) {
                return i;
            }
            if (nums[i] > i + 1) {
                // 因为数组的升序的，所以 num[i + 1] 肯定大于 i + 1
                // 那么直接跳跃到下标为 nums[i] 位置，例如 nums[0] = 100
                // 那么 nums[1] 肯定大于等于 100 ，所以从 1 到 100 之间的下标都不能等于 nums[i]，所以进行跳跃，之所以要 nums[i] - 1，是因为 i 会在 for 循环自动++，要平衡
                // 之所以不是 nums[i] > i，是因为存在nums[i]值重复
                // 如果 nums[i + 1] 等于 nums[i]，那么直接在 for 循环处 ++i 即可
                // 例如 nums[2] = 3，并且 nums[3] = 3，所以此处无需更新 i 下标
                i = nums[i] - 1;
            }
        }
        return -1;
    }
}
