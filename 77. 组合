# LeetCode
力扣
class Solution {
    public List<List<Integer>> combine(int n, int k) {
        List<List<Integer>> res = new ArrayList<>();
        if (n == 0) {
            return res;
        }
        int[] arr = new int[n];
        for (int i = 1; i <= n; i++) {
            arr[i - 1] = i;
        }
        List<Integer> list = new ArrayList<>();
        dfs(res, list, arr, k, 0);
        return res;
    }
    public void dfs(List<List<Integer>> res, List<Integer> list, int[] arr, int k, int pos) {
        if (list.size() == k) {
            res.add(new ArrayList<>(list));
            return;
        }
        for (int i = pos; i < arr.length; i++) {
            list.add(arr[i]);
            dfs(res, list, arr, k, i + 1);
            list.remove(list.size() - 1);
        }
    }
}
