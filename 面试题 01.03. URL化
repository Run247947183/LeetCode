# LeetCode
力扣
// 利用 S 字符串空间来解决
class Solution {
    public String replaceSpaces(String S, int length) {
        char[] chars = S.toCharArray();
        int index = length - 1;
        int i = S.length() - 1;
        while (i >= 0 && index >= 0) {
            if (chars[index] == ' ') {
                chars[i--] = '0';
                chars[i--] = '2';
                chars[i--] = '%'; 
            } else {
                chars[i--] = chars[index];
            }
            index--;
        }
        String res = new String(chars);
        // 注意：此处因为 S 的长度内可能又多余的空格出现，所以要排除这种情况
        return res.substring(res.lastIndexOf(' ') + 1);
    }
}

// 重新计算空格数量，创建字符数组
class Solution {
    public String replaceSpaces(String S, int length) {
        int space = 0;
        for (int i = 0; i < length; i++) {
            space += S.charAt(i) == ' ' ? 1 : 0;
        }
        int len = length - space + (space * 3);
        char[] chars = new char[len];
        len -= 1;
        for (int i = length - 1; i >= 0; i--) {
            if (S.charAt(i) == ' ') {
                chars[len--] = '0';
                chars[len--] = '2';
                chars[len--] = '%';
            } else {
                chars[len--] = S.charAt(i);
            }
        }
        return new String(chars);
    }
}

// 利用 StringBuilder 来解决
