class Solution {
    // 并查集
    public boolean equationsPossible(String[] equations) {
        int[] parent = new int[26];
        for (int i = 0; i < 26; i++) {
            parent[i] = i;
        }
        for (String s : equations) {
            if (s.charAt(1) == '=') {
                int index1 = s.charAt(0) - 'a';
                int index2 = s.charAt(3) - 'a';
                union(parent, index1, index2);
            }
        }
        for (String s1 : equations) {
            if (s1.charAt(1) == '!') {
                int index1 = s1.charAt(0) - 'a';
                int index2 = s1.charAt(3) - 'a';
                if (find(parent, index1) == find(parent, index2)) {
                    return false;
                }
            }
        }
        return true;
    }
    public void union(int[] parent, int index1, int index2) {
        // 降低树高度，路径优化，其中使用的是隔代压缩方法
        // 另外一种路径优化方法是递归进行全局压缩
        // 因为本题不关系查询的路径节点长度，只关心最终的查询结果
        parent[find(parent, index1)] = find(parent, index2); 
    }
    public int find(int[] parent, int index) {
        while (parent[index] != index) {
            parent[index] = parent[parent[index]];
            index = parent[index];
        }
        return index;
    }
}
