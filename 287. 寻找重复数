class Solution {
    // 二分查找思想
    // 根据题目意思，数组中有且仅有 1 个数字出现重复 2 次以上，其他数字都是[1,N]范围
    // 通过二分思想，找到范围内的中间数字，假设为 a，然后遍历数组找出小于或者等于这个数字的个数，假设为 x，如果 x <= a，那么说明[1,a]这个范围不存在重复数字
    // 如果x>a，说明在[a,N]范围存在重复数字，于是再从[a,N]范围进行二分查找
    // 按照相同的思想，进行查找
    public int findDuplicate(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        int left = 0;
        int right = nums.length - 1;
        int res = 0;
        // 这里的等于是为了防止数组中只有两个数字的情况，例如 1，1
        while (left <= right) {
            int mid = left + (right - left) / 2;
            int count = 0;
            for (int num : nums) {
                count += num <= mid ? 1 : 0;
            }
            if (count <= mid) {
                left = mid + 1;
            } else {
                right = mid - 1;
                // 保存结果，mid 也可能是重复的数字
                res = mid; 
            }
        }
        return res;
    }
}
